var blocItem = function(id, title, src){	var self = this;	self.id = id;	self.title = translator.translate(title);	self.src = src;};var bloc = function(id, type, title, body){	var self = this;	self.id = id;	self.type = type;	self.title = translator.translate(title);	self.body = body;}var sideBar = function(blocs){	var self = this;	self.blocs = blocs || [];}var section = function(id, title, body, on){	var self = this;	self.id = id;	self.on = ko.observable(on || false);	self.title = translator.translate(title);	self.body = translator.translate(body);}var sections = function(items){	var self = this;	self.items = items || [];}var page = function(id, on, leftSideBar, rightSideBar, title, body){	var self = this;	self.id = id;	self.on = ko.observable(on || false);	self.leftSideBar = leftSideBar || {items:[]};	self.rightSideBar = rightSideBar || {items:[]};	self.title = translator.translate(title);	self.body = body;		self.hasLeftSideBar = ko.computed(function(){		return self.leftSideBar.items.length > 0;	});	self.hasRightSideBar = ko.computed(function(){		return self.rightSideBar.items.length > 0;	});}var viewModel = function(){	var self = this;	var indexLeftSideBarBloc1 = new Bloc(1, enums.blocTypeEnum.List, 'INFORMATION', [		new blocItem(1,enums.blocItemEnum.About, null),		new blocItem(2,enums.blocItemEnum.Other, null)	]);		var indexLeftSideBar = new sideBar([		new Bloc(1, enums.blocTypeEnum.List, 'INFORMATION', [			new blocItem(1,enums.blocItemEnum.About, null),			new blocItem(2,enums.blocItemEnum.Other, null)		])	]);		var indexRightSideBar = new sideBar([		new Bloc(1, enums.blocTypeEnum.List, 'INFORMATION', [			new blocItem(1,enums.blocItemEnum.About, null),			new blocItem(2,enums.blocItemEnum.Other, null)		])	]);		self.aboutSections = new sections([		new section(enums.sideBarItemEnum.Introduction, enums.sideBarItemEnum.Introduction, enums.traductionCodeEnum.EntrepriseIntro),		new section(enums.sideBarItemEnum.Culture, enums.sideBarItemEnum.Culture, enums.traductionCodeEnum.EntrepriseCult),		new section(enums.sideBarItemEnum.Destiny, enums.sideBarItemEnum.Destiny, enums.traductionCodeEnum.EntrepriseDestiny),		new section(enums.sideBarItemEnum.Exploration, enums.sideBarItemEnum.Exploration, enums.traductionCodeEnum.EntrepriseExplo)	]);		self.pages = ko.observableArray([		new page('index', true, indexLeftSideBar, indexRightSideBar, enums.traductionCodeEnum.PageIndexTitle, self.aboutSections),		new page('about', false, indexLeftSideBar, indexRightSideBar, enums.traductionCodeEnum.PageAboutTitle,self.aboutSections)	]);		self.switchLanguage = function(data, event){		var ln = $(event.target).data('ln');		console.log(ln);		if(translator.swithLanguage(ln)){			location.reload();		}	};		self.aboutSwitchSection = function(data, event){		ko.utils.arrayForEach(self.aboutSections.items, function (item) {            if(item.id === data.id){				item.on(true);			}else{				item.on(false);			}        });	};		self.toggle = function(data, event){		var page = $(event.target).data('page') || '';		ko.utils.arrayForEach(self.pages(), function (item) {            if(item.id === page){				item.on(true);			}else{				item.on(false);			}        });	};};$(function(){	ko.applyBindings(new viewModel());})