pages.PageModule = pages.PageModule || (function(){	var res = {};		res.init = function(args){		var _args = $.extend({			id : 0, 			on : false, 			leftSideBar : [], 			rightSideBar : [], 			title : '_undefined', 			sections : []		}, args);				return new components.page(_args);	};	return res;}());(function(){var viewModel = function(){	var self = this;	//create indexPage components	var indexLeftSideBarBloc1 = new components.bloc(1, true, enums.blocTypeEnum.List, enums.traductionCodeEnum.Information,[		new components.blocItem(1,true,enums.blocItemEnum.Introduction),		new components.blocItem(2,true,enums.blocItemEnum.Culture),		new components.blocItem(3,true,enums.blocItemEnum.Destiny),		new components.blocItem(4,true,enums.blocItemEnum.Exploration)	] );	var indexLeftSideBar = new components.sideBar(1, true,[indexLeftSideBarBloc1]);		var indexSections = new components.sections([		new components.section(1,true,enums.traductionCodeEnum.Introduction,enums.traductionCodeEnum.EntrepriseIntro),		new components.section(2,true,enums.traductionCodeEnum.Culture,enums.traductionCodeEnum.EntrepriseCult),		new components.section(3,true,enums.traductionCodeEnum.Destiny,enums.traductionCodeEnum.EntrepriseDestiny),		new components.section(4,true,enums.traductionCodeEnum.Exploration,enums.traductionCodeEnum.EntrepriseExplo)	]);	var indexPage = pages.PageModule.init({id:1,on:true,leftSideBar:indexLeftSideBar,rightSideBar:null,title:'INDEX',sections:indexSections});	//create aboutPage components	var aboutLeftSideBarBloc1 = new components.bloc(1, true, enums.blocTypeEnum.List, enums.traductionCodeEnum.Information,[		new components.blocItem(1,true,enums.blocItemEnum.Introduction),		new components.blocItem(2,true,enums.blocItemEnum.Culture),		new components.blocItem(3,false,enums.blocItemEnum.Destiny),		new components.blocItem(4,false,enums.blocItemEnum.Exploration)	] );	var aboutLeftSideBar = new components.sideBar(1, true,[aboutLeftSideBarBloc1]);		var aboutSections = new components.sections([		new components.section(1,true,enums.traductionCodeEnum.Introduction,enums.traductionCodeEnum.EntrepriseIntro),		new components.section(2,true,enums.traductionCodeEnum.Culture,enums.traductionCodeEnum.EntrepriseCult),		new components.section(3,false,enums.traductionCodeEnum.Destiny,enums.traductionCodeEnum.EntrepriseDestiny),		new components.section(4,false,enums.traductionCodeEnum.Exploration,enums.traductionCodeEnum.EntrepriseExplo)	]);		var aboutPage = pages.PageModule.init({id:2, on:false,leftSideBar:[aboutLeftSideBar],rightSideBar:null,title:'ABOUT',sections:aboutSections});		self.pages = ko.observableArray([		indexPage,		aboutPage	]);		self.switchLanguage = function(data, event){		var ln = $(event.target).data('ln');		console.log(ln);		if(translator.swithLanguage(ln)){			location.reload();		}	};		self.toggle = function(data, event){		// var page = $(event.target).data('page') || '';		// ko.utils.arrayForEach(self.pages(), function (item) {            // if(item.id === page){				// item.on(true);			// }else{				// item.on(false);			// }        // });	};}ko.applyBindings(new viewModel());}());// var viewModel = function(){	// var self = this;	// var indexLeftSideBarBloc1 = new Bloc(1, enums.blocTypeEnum.List, 'INFORMATION', [		// new blocItem(1,enums.blocItemEnum.About, null),		// new blocItem(2,enums.blocItemEnum.Other, null)	// ]);		// var indexLeftSideBar = new sideBar([		// new Bloc(1, enums.blocTypeEnum.List, 'INFORMATION', [			// new blocItem(1,enums.blocItemEnum.About, null),			// new blocItem(2,enums.blocItemEnum.Other, null)		// ])	// ]);		// var indexRightSideBar = new sideBar([		// new Bloc(1, enums.blocTypeEnum.List, 'INFORMATION', [			// new blocItem(1,enums.blocItemEnum.About, null),			// new blocItem(2,enums.blocItemEnum.Other, null)		// ])	// ]);		// self.aboutSections = new sections([		// new section(enums.sideBarItemEnum.Introduction, enums.sideBarItemEnum.Introduction, enums.traductionCodeEnum.EntrepriseIntro),		// new section(enums.sideBarItemEnum.Culture, enums.sideBarItemEnum.Culture, enums.traductionCodeEnum.EntrepriseCult),		// new section(enums.sideBarItemEnum.Destiny, enums.sideBarItemEnum.Destiny, enums.traductionCodeEnum.EntrepriseDestiny),		// new section(enums.sideBarItemEnum.Exploration, enums.sideBarItemEnum.Exploration, enums.traductionCodeEnum.EntrepriseExplo)	// ]);		// self.pages = ko.observableArray([		// new page('index', true, indexLeftSideBar, indexRightSideBar, enums.traductionCodeEnum.PageIndexTitle, self.aboutSections),		// new page('about', false, indexLeftSideBar, indexRightSideBar, enums.traductionCodeEnum.PageAboutTitle,self.aboutSections)	// ]);		// self.switchLanguage = function(data, event){		// var ln = $(event.target).data('ln');		// console.log(ln);		// if(translator.swithLanguage(ln)){			// location.reload();		// }	// };		// self.aboutSwitchSection = function(data, event){		// ko.utils.arrayForEach(self.aboutSections.items, function (item) {            // if(item.id === data.id){				// item.on(true);			// }else{				// item.on(false);			// }        // });	// };		// self.toggle = function(data, event){		// var page = $(event.target).data('page') || '';		// ko.utils.arrayForEach(self.pages(), function (item) {            // if(item.id === page){				// item.on(true);			// }else{				// item.on(false);			// }        // });	// };// };// $(function(){	// ko.applyBindings(new viewModel());// })